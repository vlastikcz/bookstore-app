services:
  traefik:
    image: traefik:3
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "8080:8080"
    volumes:
      - ../gateway/traefik.yml:/etc/traefik/traefik.yml:ro
      - ../gateway/dynamic.yaml:/etc/traefik/dynamic.yaml:ro
    depends_on:
      - catalog-service
      - keycloak
    networks:
      - bookstore

  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    command:
      - start-dev
      - --http-port=8080
      - --import-realm
      - --hostname-strict=false
      - --hostname=http://keycloak:8080
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    ports:
      - "8081:8080"
    volumes:
      - ./keycloak:/opt/keycloak/data/import:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - bookstore

  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-catalogdb}
      POSTGRES_USER: ${POSTGRES_USER:-catalog}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-catalog}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-catalog} -d $${POSTGRES_DB:-catalogdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookstore

  catalog-service:
    build:
      context: ../..
      dockerfile: services/catalog-service/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: postgres
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-catalogdb}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-catalog}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-catalog}
      SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bookstore
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - bookstore

networks:
  bookstore:
    driver: bridge

volumes:
  postgres-data:
